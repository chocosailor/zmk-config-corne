// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#include "../zmk-nodefree-config/helper.h"

ZMK_UNICODE_PAIR(n_tilde,   N0, N0, F, N1,   N0, N0, D, N1)

/ {

    macros {
        mac_n_tilde_min: mac_n_tilde_min {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp LC(SPACE)> 
                , <&macro_press &kp LALT>
                , <&macro_tap &kp N0 &kp N0 &kp F &kp N1>
                , <&macro_release &kp LALT>
                , <&macro_tap &kp LC(SPACE)>;

            label = "MAC_N_TILDE_MIN";
        };

        mac_n_tilde_may: mac_n_tilde_may {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp LC(SPACE)> 
                , <&macro_press &kp LALT>
                , <&macro_tap &kp N0 &kp N0 &kp D &kp N1>
                , <&macro_release &kp LALT>
                , <&macro_tap &kp LC(SPACE)>;

            label = "MAC_N_TILDE_MAY";
        };


        n_tilde_may: n_tilde_may {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LALT>
                , <&macro_tap &kp N1 &kp N6 &kp N5>
                , <&macro_release &kp LALT>;

            label = "N_TILDE_MAY";
        };

        n_tilde_min: n_tilde_min {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LALT>
                , <&macro_tap &kp N1 &kp N6 &kp N4>
                , <&macro_release &kp LALT>;

            label = "N_TILDE_MIN";
        };
    };

    behaviors {
        n_tilde: n_tilde {
            compatible = "zmk,behavior-mod-morph";
            label = "N_TILDE";
            bindings = <&n_tilde_min>, <&n_tilde_may>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        mac_n_tilde: mac_n_tilde {
            compatible = "zmk,behavior-mod-morph";
            label = "MAC_N_TILDE";
            bindings = <&mac_n_tilde_min>, <&mac_n_tilde_may>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp HOME   &kp Q  &kp W       &kp E         &kp R       &kp T         &kp Y      &kp U            &kp I                &kp O       &kp P         &kp C_MUTE
&kp END    &kp A  &mt LALT S  &mt LCTRL D   &mt LGUI F  &kp G         &kp H      &mt RIGHT_GUI J  &mt RIGHT_CONTROL K  &mt RALT L  &mac_n_tilde  &kp BACKSPACE
&kp PSCRN  &kp Z  &kp X       &kp C         &kp V       &kp B         &kp N      &kp M            &kp COMMA            &kp DOT     &kp LC(UP)    &kp ENTER
                              &kp C_VOL_UP  &lt 2 TAB   &kp LSHIFT    &kp SPACE  &lt 3 TAB        &kp C_VOL_DN
            >;

            label = "macOS";
        };

        windows_layer {
            bindings = <
&kp HOME   &kp Q  &kp W       &kp E         &kp R        &kp T         &kp Y      &kp U                &kp I            &kp O       &kp P        &kp C_MUTE
&kp END    &kp A  &mt LALT S  &mt LGUI D    &mt LCTRL F  &kp G         &kp H      &mt RIGHT_CONTROL J  &mt RIGHT_GUI K  &mt RALT L  &n_tilde     &kp BACKSPACE
&kp PSCRN  &kp Z  &kp X       &kp C         &kp V        &kp B         &kp N      &kp M                &kp COMMA        &kp DOT     &kp LG(TAB)  &kp ENTER
                              &kp C_VOL_UP  &lt 2 TAB    &kp LSHIFT    &kp SPACE  &lt 3 TAB            &kp C_VOL_DN
            >;

            label = "Windows";
        };

        left_layer {
            bindings = <
&trans  &kp EXCL           &kp AT    &kp HASH  &kp DOLLAR  &kp PERCENT    &kp CARET      &kp AMPERSAND  &kp ASTERISK  &kp GRAVE  &kp TILDE  &trans
&trans  &kp DOUBLE_QUOTES  &kp LBKT  &kp LBRC  &kp LPAR    &trans         &kp SLASH      &kp MINUS      &kp EQUAL     &kp COLON  &kp SEMI   &trans
&trans  &kp SINGLE_QUOTE   &kp RBKT  &kp RBRC  &kp RPAR    &trans         &kp BACKSLASH  &kp UNDER      &kp PLUS      &kp PIPE   &kp QMARK  &trans
                                     &trans    &trans      &trans         &trans         &trans         &trans
            >;

            label = "Left";
        };

        right_layer {
            bindings = <
&trans  &kp N1   &kp N2    &kp N3     &kp N4   &kp N5     &kp N6  &kp N7    &kp N8     &kp N9     &kp N0     &trans
&trans  &kp DEL  &kp CAPS  &kp PSCRN  &kp INS  &trans     &trans  &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &trans
&trans  &trans   &trans    &trans     &trans   &trans     &trans  &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &trans
                           &trans     &trans   &kp ESC    &trans  &trans    &trans
            >;

            label = "Right";
        };

        tri_layer {
            bindings = <
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &bt BT_SEL 0    &bt BT_SEL 2  &trans         &tog 1  &kp C_MUTE    &kp C_NEXT  &trans
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &bt BT_SEL 1    &bt BT_SEL 3  &kp C_BRI_UP   &trans  &kp C_VOL_UP  &kp C_PP    &trans
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &bt BT_CLR      &bt BT_SEL 4  &kp C_BRI_DEC  &trans  &kp C_VOL_DN  &kp C_PREV  &trans
                         &trans   &trans   &trans          &trans        &trans         &trans
            >;

            label = "Tri";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <2 3>;
            then-layer = <4>;
        };
    };
};
